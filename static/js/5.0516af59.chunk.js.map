{"version":3,"sources":["GoogleMap.js"],"names":["GoogleMap","province","newData","useState","loading","setLoading","useEffect","myData","setMyData","translate","temp","i","length","push","v","f","parseInt","className","width","window","innerWidth","left","align","top","chartType","data","options","region","colorAxis","colors","backgroundColor","datalessRegionColor","defaultColor","resolution","mapsApiKey","rootProps"],"mappings":"yJAiFeA,UA3Ef,YAA4C,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAAW,EAQXC,oBAAS,GARE,mBAQlCC,EARkC,KAQzBC,EARyB,KASvCC,qBAAU,WAEND,GAAW,KAEZ,CAACJ,IAbmC,MAeZE,mBAAS,MAfG,mBAejCI,EAfiC,KAezBC,EAfyB,KAyDzC,OAzCEF,qBAAU,WAaN,IAXA,IAAIG,EAAY,CACZ,IAAM,SACN,IAAM,SACN,GAAK,QACL,GAAK,QACL,IAAM,SACN,IAAM,SACN,GAAK,QACL,IAAM,UAENC,EAAO,CAAC,CAAC,QAAQ,cACbC,EAAI,EAAGA,EAAIT,EAAQU,OAAQD,IAI/BD,EAAKG,KAAK,CAAC,CAACC,EAAEL,EAAUP,EAAQS,GAAG,IAAKI,EAAEb,EAAQS,GAAG,IAAKK,SAASd,EAAQS,GAAG,MAGlFH,EAAUE,KAEX,CAACT,IAoBJG,EAAU,yBAAKa,UAAU,WAAf,cACN,kBAAC,IAAD,CACIC,MAAQC,OAAOC,WAAa,IAAI,OAAO,OACvCC,KAAK,OACLC,MAAM,QACNC,IAAI,MACJC,UAAU,WACVC,KAAMlB,EACNmB,QAzBC,CACHC,OAAQ,KACRC,UAAW,CAAEC,OAAQ,CACX,UACA,UACA,UACA,YAGVC,gBAAiB,QACjBC,oBAAqB,mBACrBC,aAAc,UACdC,WAAY,aAgBVC,WAAW,gBACXC,UAAW,CAAE,cAAe","file":"static/js/5.0516af59.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { Chart } from \"react-google-charts\";\n\n\n\nfunction GoogleMap ({ province, newData }) {\n    const keys = [\n        \"State\",\n        \"Confirmed\",\n        \"Deaths\",\n        \"Recovered\"\n    ];\n\n  const [loading, setLoading] = useState(true);\n    useEffect(() => {\n\n        setLoading(false)\n\n    }, [province]);\n  \n  const [ myData, setMyData] = useState(null);\n    useEffect(() => {\n\n        let translate = {\n            \"NSW\":\"AU-NSW\",\n            \"ACT\":\"AU-ACT\",\n            \"NT\":\"AU-NT\",\n            \"WA\":\"AU-WA\",\n            \"VIC\":\"AU-VIC\",\n            \"QLD\":\"AU-QLD\",\n            \"SA\":\"AU-SA\",\n            \"TAS\":\"AU-TAS\",\n        }\n        let temp = [[\"state\",\"Confirmed\"]]\n        for(let i = 0; i < newData.length; i++)\n        {\n            // Add each data row.\n            // v: Tooltip text, f: ISO region code\n            temp.push([{v:translate[newData[i][0]], f:newData[i][0]}, parseInt(newData[i][1])])\n        }\n\n        setMyData(temp)\n\n    }, [province]);\n\n  const getOption = () => {\n      return {\n          region: 'AU', // ISO 3166-1 alpha-2 code for Australia\n          colorAxis: { colors: [\n                    '#ffefef',\n                    '#ffc0b1',\n                    '#ff8c71',\n                    '#ef1717'\n                    // '#9c0505'\n              ] },\n          backgroundColor: 'white',\n          datalessRegionColor: 'rgb(216,221,224)',\n          defaultColor: '#f5f5f5',\n          resolution: 'provinces'\n      }\n  };\n\n  return (\n    loading ? <div className=\"loading\">Loading...</div> :\n        <Chart\n            width= {window.innerWidth < 960?'100%':'auto'}\n            left=\"auto\"\n            align=\"right\"\n            top=\"40%\"\n            chartType=\"GeoChart\"\n            data={myData}\n            options={getOption()}\n            // Note: you will need to get a mapsApiKey for your project.\n            // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n            mapsApiKey=\"YOUR_KEY_HERE\"\n            rootProps={{ 'data-testid': '3' }}\n        />\n  )\n}\n\nexport default GoogleMap\n"],"sourceRoot":""}